name: Build Browserbox
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
  merge_group:
  workflow_dispatch:
env:
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        browser_name: [brave, chrome, firefox, floorp]
        image_name: [browserbox]
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"
          COMMIT_TAGS=()
          BUILD_TAGS=()
          # Have tags for tracking builds during pull request
          SHA_SHORT="${GITHUB_SHA::7}"
          COMMIT_TAGS+=("pr-${{ github.event.pull_request.number }}")
          COMMIT_TAGS+=("${SHA_SHORT}")

          BUILD_TAGS=("latest" "${TIMESTAMP}")

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Generated the following commit tags: "
              for TAG in "${COMMIT_TAGS[@]}"; do
                  echo "${TAG}"
              done
              alias_tags=("${COMMIT_TAGS[@]}")
          else
              alias_tags=("${BUILD_TAGS[@]}")
          fi
          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      - name: Set image name
        run: |
          if [[ "${{ matrix.browser_name }}" == "firefox" ]]; then
            echo "IMAGE_NAME=firebox" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ matrix.browser_name }}box" >> $GITHUB_ENV
          fi

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=latest
            org.opencontainers.image.description=Browser images for Distrobox.
            io.artifacthub.package.readme-url=https://github.com/${{ github.repository_owner }}/browserbox#readme

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.generate-tags.outputs.alias_tags }}
          build-args: |
            BROWSER_NAME=${{ matrix.browser_name }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true
          extra-args: |
            --target=${{ matrix.base_name }}

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Sign image
        uses: EyeCantCU/cosign-action/sign@v0.2.1
        with:
          containers: ${{ env.IMAGE_NAME }}
          registry: ghcr.io/${{ github.repository_owner }}
          registry-token: ${{ secrets.GITHUB_TOKEN }}
          signing-secret: ${{ secrets.SIGNING_SECRET }}
          tags: ${{ steps.push.outputs.digest }}

      - name: Verify image
        uses: EyeCantCU/cosign-action/verify@v0.2.1
        with:
          containers: ${{ env.IMAGE_NAME }}
          pubkey: ./cosign.pub
          registry: ghcr.io/${{ github.repository_owner }}

      - name: Echo outputs
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"

  check:
    name: Check all builds successful
    runs-on: ubuntu-latest
    needs: [push-ghcr]
    steps:
      - name: Exit
        shell: bash
        run: exit 0
